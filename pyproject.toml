[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"

[project]
name = "cybersf"
dynamic = ["version"]
description = "Cyber Security Framework & Hacking Tools Pack"
readme = "README.md"
requires-python = ">=3.8"
authors = [
    { name = "KhulnaSoft DevSecOps", email = "security@khulnasoft.com" },
]

[project.urls]
Homepage = "https://github.com/khulnasoft/cybersf"
Repository = "https://github.com/khulnasoft/cybersf"

[tool.khulnasoft._internal-slim-build.packages.cybersf-slim.project]
name = "cybersf-slim"

[tool.khulnasoft._internal-slim-build.packages.cybersf]
include-optional-dependencies = ["standard"]

[tool.khulnasoft._internal-slim-build.packages.cybersf.project.optional-dependencies]
all = [
    # # For the test client
    "httpx >=0.23.0",
    # For templates
    "jinja2 >=2.11.2",
    # For forms and file uploads
    "python-multipart >=0.0.7",
    # For Starlette's SessionMiddleware, not commonly used with CyberSF
    "itsdangerous >=1.1.0",
    # For Starlette's schema generation, would not be used with CyberSF
    "pyyaml >=5.3.1",
    # For UJSONResponse
    "ujson >=4.0.1,!=4.0.2,!=4.1.0,!=4.2.0,!=4.3.0,!=5.0.0,!=5.1.0",
    # For ORJSONResponse
    "orjson >=3.2.1",
    # To validate email fields
    "email_validator >=2.0.0",
    # Uvicorn with uvloop
    "uvicorn[standard] >=0.12.0",
    # Settings management
    "pydantic-settings >=2.0.0",
    # Extra Pydantic data types
    "pydantic-extra-types >=2.0.0",
]

[tool.isort]
profile = "black"

[tool.coverage.run]
parallel = true
source = [
    "cybersf"
]
context = '${CONTEXT}'

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
    "W191",  # indentation contains tabs
    "B024",
    "B027",
]


[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]

[tool.ruff.lint.isort]
known-third-party = ["cybersf"]

[tool.ruff.lint.pyupgrade]
# Preserve types, even if a file imports `from __future__ import annotations`.
keep-runtime-typing = true